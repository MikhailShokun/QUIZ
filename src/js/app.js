const questions = [{
        question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç HTML?",
        answers: [
            "Hypertext Markup Language",
            "Hypertext Markdown Language",
            "Hyperloop Machine Language",
            "Helicopters Terminals Motorboats Lamborginis",
        ],
        correct: 1,
    },
    {
        question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç CSS?",
        answers: [
            "Central Style Sheets",
            "Cascading Style Sheets",
            "Cascading Simple Sheets",
            "Cars SUVs Sailboats",
        ],
        correct: 2,
    },
    {
        question: "–ö–∞–∫–æ–π —è–∑—ã–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ?",
        answers: ["Java", "C", "Python", "JavaScript"],
        correct: 4,
    },
    {
        question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –±—ã–ª —Å–æ–∑–¥–∞–Ω JavaScript?",
        answers: ["1996", "1995", "1994", "–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ"],
        correct: 2,
    },
    {
        question: "–ö–∞–∫–æ–π —Ç–µ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç JavaScript –∫–æ–¥?",
        answers: ['style', 'script', 'code', 'body'],
        correct: 2,
    },
    {
        question: "–ö–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º JavaScript –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏?",
        answers: ['int', 'var', 'variable', 'let'],
        correct: 4,
    },
    {
        question: "–ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç c—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è 38%5 ?",
        answers: ['7', '38%5', '3', 'NaN'],
        correct: 3,
    },
    {
        question: "–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ò (&&) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true(–∏—Å—Ç–∏–Ω–∞), –µ—Å–ª–∏:",
        answers: [
            '–û–±–µ –æ–ø–µ—Ä–∞–Ω–¥—ã –∏—Å—Ç–∏–Ω–Ω—ã',
            '–ï—Å–ª–∏ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å –∏–∑ –æ–ø–µ—Ä–∞–Ω–¥–æ–≤ –∏—Å—Ç–∏–Ω–Ω—ã–π, –Ω–æ –Ω–µ –æ–±–∞',
            '–ï—Å–ª–∏ –∏—Å—Ç–∏–Ω–Ω—ã–π —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–∑ –æ–ø–µ—Ä–∞–Ω–¥–æ–≤'
        ],
        correct: 1,
    },
    {
        question: "–õ–æ–≥–∏—á–µ—Å–∫–æ–µ –ù–ï –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true(–∏—Å—Ç–∏–Ω–∞), –µ—Å–ª–∏:",
        answers: [
            "–û–ø–µ—Ä–∞–Ω–¥ —è–≤–ª—è–µ—Ç—Å—è –ª–æ–∂–Ω—ã–º(false)",
            "–û–ø–µ—Ä–∞–Ω–¥ —è–≤–ª—è–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω—ã–º(true)"
        ],
        correct: 1,
    },
    {
        question: "–û–ø–µ—Ä–∞—Ç–æ—Ä switch –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –¥–ª—è –∑–∞–º–µ–Ω—ã...",
        answers: ["–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤", "–º–Ω–æ–∂–µ—Å—Ç–≤–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ if else", "–æ–±—å—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö"],
        correct: 2,
    }
];

const headerContainer = document.querySelector('#header');
const listContainer = document.querySelector('#list');
const submitBtn = document.querySelector('#submit');

let score = 0;
let questionIndex = 0;

clearPage();
showQuestion();
submitBtn.addEventListener('click', checkAnswer);

function clearPage() {
    headerContainer.innerHTML = "";
    listContainer.innerHTML = "";
}

function showQuestion() {

    const headerTemplate = `<h2 class="title">%title%</h2>`;
    const title = headerTemplate.replace('%title%', questions[questionIndex]['question']);
    headerContainer.innerHTML = title;

    let answerNumber = 1;
    for (let answerText of questions[questionIndex]['answers']) {
        const variantAnswerTemplate = `
          <li>
             <label>
				  	    <input value="%number%" type="radio" class="answer" name="answer" />
					     <span>%answer%</span>
			  	  </label>
          </li>`;
        const answerHTML = variantAnswerTemplate
            .replace('%answer%', answerText)
            .replace('%number%', answerNumber);
        listContainer.innerHTML += answerHTML;
        answerNumber++;
    }
}

function checkAnswer() {
    const checkedRadio = listContainer.querySelector('input[type="radio"]:checked');
    if (!checkedRadio) {
        submitBtn.blur();
        return
    }
    const userAnswer = +checkedRadio.value;


    if (userAnswer === questions[questionIndex]['correct']) {
        score++;
    }

    if (questionIndex !== questions.length - 1) {
        questionIndex++;
        clearPage();
        showQuestion();
    } else {
        clearPage();
        showResults();
    }
}

function showResults() {
    const resultsTemplate = `
              <h2 class="title">%title%</h2>
              <h3 class="summary">%message%</h3>
              <p class="result">%result%</p>`;

    let title, message;

    if (score === questions.length) {
        title = '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º 	üí•üí•üí•';
        message = '–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã üëçüòé';
    } else if (score * 100 / questions.length >= 50) {
        title = '–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç	üí•';
        message = '–í—ã –¥–∞–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ üëç';
    } else {
        title = '–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è ‚òù';
        message = '–í—ã –¥–∞–ª–∏ –º–µ–Ω–µ–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ üòî';
    }

    let result = `${score} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –∏–∑ ${questions.length} –≤–æ–ø—Ä–æ—Å–æ–≤.`;

    const finalMessage = resultsTemplate
        .replace('%title%', title)
        .replace('%message%', message)
        .replace('%result%', result);

    headerContainer.innerHTML = finalMessage;

    submitBtn.blur();
    submitBtn.innerText = '–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ';
    submitBtn.addEventListener('click', () => history.go());
}